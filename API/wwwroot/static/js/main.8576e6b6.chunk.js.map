{"version":3,"sources":["reportWebVitals.ts","app/Models/pagination.ts","app/api/agent.ts","app/Models/Activity.ts","app/Models/profile.ts","app/stores/ActivityStore.ts","app/stores/ProfileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/Dashboard/ActivityListItemAttendee.tsx","features/activities/Dashboard/ActivityListItem.tsx","features/activities/Dashboard/ActivitiList.tsx","features/activities/Dashboard/ActivityFilters.tsx","features/activities/Dashboard/ActivityListItemPlaceholder.tsx","features/activities/Dashboard/ActivitiDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.tsx","app/common/form/MeDateInput.tsx","features/activities/form/activityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","app/layout/ScrollToTop.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","Promise","reject","responseBody","requests","url","get","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","updateProfile","profile","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","userName","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","currentUserProfile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","deletPhoto","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","lable","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoginForm","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","showTimeSelect","timeCaption","dateFormat","placeholderText","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","Modal","onClose","setEditMode","isCurrenUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWifget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetmainPhoto","handleDeletePhoto","menuPosition","Statistic","label","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","AcivityDetails","activityForm","ProfilePage","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.8576e6b6.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface Pagination{\r\n    currentPage:number;\r\n    itemsPerPage:number;\r\n    totalItems:number;\r\n    totalPages:number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data: T;\r\n    pagination:Pagination;\r\n\r\n    constructor(data:T,pagination:Pagination){\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize ;\r\n\r\n    constructor(pageNumber = 1,pageSize = 2){\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../Models/Activity\";\r\nimport { PaginatedResult } from \"../Models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../Models/profile\";\r\nimport { User, UserFormValues } from \"../Models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = store.commonStore.token;\r\n  if(token) config.headers.Authorization = `Bearer ${token}`\r\n  return config;\r\n})\r\n\r\naxios.interceptors.response.use(async (response) => {\r\n  if( process.env.NODE_ENV === 'development') await sleep(1000);\r\n  const pagination = response.headers['pagination'];\r\n  if(pagination){\r\n    response.data = new PaginatedResult(response.data,JSON.parse(pagination))\r\n    return response as AxiosResponse<PaginatedResult<any>>\r\n  }\r\n  return response;\r\n},(error:AxiosError)=>{\r\n    const{data ,status,config} = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data ==='string') \r\n            {\r\n                toast.error(data);\r\n                \r\n            }\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found')\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for(const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found')\r\n            break;\r\n        case 500:\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for(const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }else{\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error); \r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>(\"/activities\",{params}).then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) => requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n};\r\n\r\nconst Account ={\r\n  current: ()=> requests.get<User>('/account'),\r\n  login:(user:UserFormValues)=>requests.post<User>('/account/login',user),\r\n  register:(user:UserFormValues)=>requests.post<User>('/account/register',user),\r\n\r\n}\r\n\r\nconst Profiles = {\r\n  get:(username:string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto:(file: Blob) =>{\r\n    let formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('photos', formData, {\r\n      headers:{'Content-type': 'multipart/form-data'}\r\n    })\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`,{}),\r\n  deletePhoto:(id: string) => requests.del(`/photos/${id}`),\r\n  updateFollowing:(username:string) => requests.post(`/follow/${username}`,{}),\r\n  updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`,profile),\r\n  listFollowings: (username: string, predicate:string) =>\r\n   requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n   requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n\r\n}\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername:string;\r\n  isCancelled:boolean;\r\n  isGoing: boolean;\r\n  isHost:boolean;\r\n  host?:Profile;\r\n  attendees:Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?:ActivityFormValues){\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues{\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string ='';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(activity?: ActivityFormValues){\r\n    if(activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n    username:string;\r\n    displayName: string;\r\n    image?:string;\r\n    bio?:string;\r\n    followersCount:number,\r\n    followingCount: number,\r\n    following: boolean,\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.userName;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id:string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../Models/Activity\";\r\nimport {format} from 'date-fns'\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../Models/profile\";\r\nimport { Pagination, PagingParams } from \"../Models/pagination\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate= new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    )\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) =>{\r\n    this.pagingParams = pagingParams;\r\n  }\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if(key !== 'startDate') this.predicate.delete(key);\r\n      })\r\n    }\r\n    switch (predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n    }\r\n  }\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber',this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if(key ==='startDate'){\r\n        params.append(key, (value as Date).toISOString())\r\n      }else{\r\n        params.append(key,value);\r\n      }\r\n    })\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!,'dd MMM yyyy')\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  }\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n  private setActivity = async (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    \r\n    if(user){\r\n      activity.isGoing = activity.attendees!.some(\r\n        a => a.username === user.userName\r\n      )\r\n      activity.isHost = activity.hostUsername === user.userName; \r\n      activity.host= activity.attendees?.find(x => x.username === activity.hostUsername);\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n   const user = store.userStore.user;\r\n   const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.userName;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if(activity.id){\r\n          let updateActivity = {...this.getActivity(activity.id), ...activity}\r\n          this.activityRegistry.set(activity.id, updateActivity as Activity);\r\n          this.selectedActivity =  updateActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () =>{\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() =>{\r\n        if(this.selectedActivity?.isGoing){\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(a => a.username !== user?.userName);\r\n          this.selectedActivity.isGoing = false;\r\n        }else{\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    } finally{\r\n      runInAction(( ) => this.loading = false);\r\n    }\r\n  }\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try{\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(()=>{\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!)\r\n      })\r\n    }catch(error){\r\n      console.log(error);\r\n    }finally{\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      })\r\n    }\r\n  } \r\n\r\n  clearSelectedActivity = () =>{\r\n    this.selectedActivity = undefined;\r\n  }\r\n\r\n  updateAttendeeFollowing = (username:string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee =>{\r\n         if(attendee.username === username){\r\n           attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n           attendee.following = !attendee.following;\r\n         }\r\n      })\r\n    })\r\n  } \r\n}\r\nexport default ActivityStore;\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../Models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  currentUserProfile: Profile | null = null;\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab: number = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrenUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.userName === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n  deletPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.userName &&\r\n          this.profile.username !== username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.userName\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../Models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore{\r\n    user: User | null = null;\r\n    \r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds:UserFormValues)=>{\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () =>{\r\n        try{\r\n            const user = await agent.Account.current();\r\n            runInAction(()=> this.user = user);\r\n        } catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }\r\n    register = async (creds:UserFormValues) =>{\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n    setImage= (image:string)=>{\r\n        if(this.user){\r\n            this.user.image = image;\r\n        }\r\n        \r\n    }\r\n}","import { createContext,useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\n\r\n\r\n\r\ninterface Store{\r\n    activityStore: ActivityStore;\r\n    userStore: UserStore;\r\n    commonStore: CommonStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore:CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n  token: string | null = window.localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n   \r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n        () => this.token,\r\n        token => {\r\n            if(token){\r\n                window.localStorage.setItem('jwt',token)\r\n            }else{\r\n                window.localStorage.removeItem('jwt')\r\n            }\r\n        }\r\n    )\r\n  }\r\n\r\n  setToken= (token: string | null) => {\r\n      this.token = token;\r\n  }\r\n\r\n  setAppLoaded = () =>{\r\n      this.appLoaded = true;\r\n  }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore{\r\n        modal : Modal ={\r\n            open: false,\r\n            body:null\r\n        }\r\n\r\n        constructor(){\r\n            makeAutoObservable(this)\r\n        }\r\n        openModal = (content : JSX.Element) =>{\r\n            this.modal.open = true;\r\n            this.modal.body = content;\r\n        }\r\n        closeModal = () =>{\r\n            this.modal.open = false;\r\n            this.modal.body = null;\r\n        }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction} from \"mobx\";\r\nimport { ChatComment } from \"../Models/Comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments:ChatComment[]= [];\r\n    hubConnection:HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) =>{\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl( process.env.REACT_APP_CHAT_URL + '?activityId='+activityId,{\r\n                    accessTokenFactory:() => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n            \r\n            this.hubConnection.start().catch(error => console.log('Error establishing the connection:',error));\r\n            \r\n            this.hubConnection.on('LoadComments',(comments: ChatComment[]) =>{\r\n                runInAction( () => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z')\r\n                    })\r\n                    this.comments = comments\r\n                });\r\n            })\r\n            this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt)\r\n                    this.comments.unshift(comment)\r\n                } );\r\n            })\r\n        }\r\n    } \r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error))\r\n    }\r\n    clearComments = () => {\r\n        this.comments =[];\r\n        this.stopHubConnection();\r\n    }\r\n    addComment =  async (values:any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment',values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nconst NavBar = () => {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          ></Button>\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.userName}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\nexport default observer(NavBar);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/Models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst FollowButton = ({ profile }: Props) => {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.userName === profile.username) return null;\r\n\r\n  const handleFollow = (e: SyntheticEvent, username: string) => {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  };\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following ? 'Following' : 'Not following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following  ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e,profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n};\r\n\r\nexport default observer(FollowButton);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/Models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileCard = ({ profile }: Props) => {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || `/assets/user.png`} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileCard);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/Models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nconst ActivityListItemAttendee = ({ attendees }: Props) => {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth:3\r\n  }\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile ={ attendee}/>\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\nexport default observer(ActivityListItemAttendee);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item,  Label,  Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/Models/Activity\";\r\nimport {format} from 'date-fns'\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n\r\ninterface Props {   \r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityListItem = ({ activity }: Props) => {\r\n  return (\r\n    <Segment.Group>\r\n        <Segment>\r\n            {activity.isCancelled && <Label attached='top' color='red' content='Cancelled' style={{textAlign:'centr'}}/>}\r\n            <Item.Group>\r\n                <Item>\r\n                    <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'}/>\r\n                    <Item.Content>\r\n                        <Item.Header as ={Link} to={`/activities/${activity.id}`}>\r\n                            {activity.title}\r\n                        </Item.Header>\r\n                        <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link> </Item.Description>\r\n                        {activity.isHost && (\r\n                            <Item.Description>\r\n                                <Label basic color=\"orange\">\r\n                                    You are hosting this activity\r\n                            </Label>\r\n                            </Item.Description>\r\n                        )}\r\n                        {activity.isGoing && !activity.isHost && (\r\n                            <Item.Description>\r\n                                <Label basic color=\"green\">\r\n                                    You are going to this activity\r\n                                </Label>\r\n                            </Item.Description>\r\n                        )}\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        </Segment>\r\n        <Segment>\r\n            <span>\r\n                <Icon name='clock' />{format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n                <Icon name='marker'/>{activity.venue}\r\n            </span>\r\n        </Segment>\r\n        <Segment secondary>\r\n            <ActivityListItemAttendee attendees ={activity.attendees!}/>\r\n        </Segment>\r\n        <Segment clearing>\r\n            <span>{activity.description}</span>\r\n            <Button \r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                color='teal'\r\n                floated='right'\r\n                content='View'\r\n\r\n            />\r\n        </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityListItem);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nconst ActivityList = () => {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n\r\n              {activities.map((activity) => (\r\n                <ActivityListItem key={activity.id} activity={activity} />\r\n              ))}\r\n\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst ActivityFilters = () => {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I am going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I am hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar onChange={(date) => setPredicate(\"startDate\", date as Date)} value= {predicate.get('startDate') || new Date()} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityFilters);\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/Models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityList from \"./ActivitiList\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nconst ActivityDashboard = () => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivities,\r\n    activityRegistry,\r\n    setPagingParams,\r\n    pagination,\r\n  } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size === 0) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Grid.Column width=\"10\">\r\n          {activityStore.loadingInitial && !loadingNext ? (\r\n            <>\r\n              <ActivityListItemPlaceholder />\r\n              <ActivityListItemPlaceholder />\r\n            </>\r\n          ) : (\r\n            <InfiniteScroll\r\n              pageStart={0}\r\n              loadMore={handleGetNext}\r\n              hasMore={\r\n                !loadingNext &&\r\n                !!pagination &&\r\n                pagination.currentPage < pagination.totalPages\r\n              }\r\n              initialLoad={false}\r\n            >\r\n              <ActivityList />\r\n            </InfiniteScroll>\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"6\">\r\n          <ActivityFilters />\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Loader active={loadingNext} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default observer(ActivityDashboard);\r\n","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name: string;\r\n    type?:string;\r\n    lable?: string;\r\n}\r\n\r\nconst MyTextInput = (props:Props) => {\r\n    const[field,meta] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.lable}</label>\r\n            <input {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ): null}\r\n        </Form.Field>\r\n    )\r\n}\r\n\r\n\r\nexport default MyTextInput;","import { ErrorMessage, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst LogiForm = () => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\",error:null }}\r\n      onSubmit={(values, { setErrors }) => userStore.login(values).catch(error => \r\n        setErrors({error:'Invalid email or password'}))}\r\n    >\r\n      {({ handleSubmit, isSubmitting,errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as='h2' content ='Login to Reactivities' color='teal' textAlign='center'/>\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage \r\n            name='error' render={() => <Label style={{marginBottom:10}} basic color = 'red' content={errors.error}/>}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(LogiForm);\r\n","\r\nimport React from 'react'\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    errors:any;\r\n}\r\n\r\nconst ValidationErrors = ({errors}:Props) => {\r\n    return(\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err:any,i:any) => (\r\n                        <Message.Item key={i}>\r\n                            {err}\r\n                        </Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default ValidationErrors;","import { ErrorMessage, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Form, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup'\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nconst RegisterForm = () => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{displayName:'',userName:'', email: \"\", password: \"\",error:null }}\r\n      onSubmit={(values, { setErrors }) => userStore.register(values).catch(error => \r\n        setErrors({error}))}\r\n        validationSchema={Yup.object({\r\n            displayName: Yup.string().required(),\r\n            username: Yup.string().required(),\r\n            email: Yup.string().required().email(),\r\n            password: Yup.string().required(),\r\n        })}\r\n    >\r\n      {({ handleSubmit, isSubmitting,errors ,isValid,dirty}) => (\r\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header as='h2' content ='Sign up to Reactivities' color='teal' textAlign='center'/>\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage \r\n            name='error' render={() => <ValidationErrors errors={errors.error}/>}\r\n          />\r\n          <Button\r\n          disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(RegisterForm);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nconst HomePage = () => {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm/>)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n    inverted?: boolean;\r\n    content?: string;\r\n}\r\n\r\nconst LoadingComponent =({inverted = true,content = 'Loading...'}: Props) =>{\r\n    return (\r\n        <Dimmer active={true} inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n};\r\n\r\nexport default LoadingComponent;","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\n\r\ninterface Props{\r\n    placeholder:string;\r\n    name: string;\r\n    rows:number;\r\n    lable?: string;\r\n}\r\n\r\nconst MyTextArea = (props:Props) => {\r\n    const[field,meta] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n            <label>{props.lable}</label>\r\n            <textarea {...field} {...props}/>\r\n            {meta.touched && meta.error ? (\r\n                <Label basic color='red'>{meta.error}</Label>\r\n            ): null}\r\n        </Form.Field>\r\n    )\r\n}\r\n\r\n\r\nexport default MyTextArea;","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  lable?: string;\r\n}\r\n\r\nconst MySelectInput = (props: Props) => {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.lable}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e,d) => helpers.setValue(d.value)}\r\n        onBlur={()=> helpers.setTouched(true)}\r\n        placeholder= {props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MySelectInput;\r\n","export const categoryOptions = [\r\n    {text:'Drinks', value:'drinks'},\r\n    {text:'Culture', value:'culture'},\r\n    {text:'Film', value:'film'},\r\n    {text:'Food', value:'food'},\r\n    {text:'Music', value:'music'},\r\n    {text:'Travel', value:'travel'},\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={value => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyDateInput;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MeDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/Models/Activity\";\r\n\r\nconst ActivityForm = () => {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    updateActivity,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required('Date is required').nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\r\n  }, [id, loadActivity]);\r\n\r\n  const handleFormSubmit = (activity: ActivityFormValues) => {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() => {\r\n        history.push(`/activities/${newActivity.id}`);\r\n      });\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  };\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n            />\r\n            <Header content=\"Activity Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cencel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n      <Formik\r\n            onSubmit={(values, { resetForm }) => {\r\n              commentStore.addComment(values).then(() => resetForm());\r\n            }}\r\n            initialValues={{ body: \"\" }}\r\n            validationSchema={Yup.object({\r\n              body: Yup.string().required(),\r\n            })}\r\n          >\r\n            {({ isSubmitting, isValid, handleSubmit }) => (\r\n              <Form className=\"ui form\">\r\n                <Field name=\"body\">\r\n                  {(props: FieldProps) => (\r\n                    <div style={{ position: \"relative\" }}>\r\n                      <Loader active={isSubmitting} />\r\n                      <textarea\r\n                        placeholder=\"Enter your comment(Enter to submit,SHIFT + enter for new line)\"\r\n                        rows={2}\r\n                        {...props.field}\r\n                        onKeyPress={e => {\r\n                            if(e.key === 'Enter' && e.shiftKey){\r\n                                return;\r\n                            }\r\n                            if(e.key ==='Enter' && !e.shiftKey){\r\n                                e.preventDefault();\r\n                                isValid && handleSubmit();\r\n                            }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt) } ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style ={{whiteSpace:'pre-wrap'}}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/Models/Activity\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelld\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              disabled={activity.isCancelled}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button   disabled={activity.isCancelled} loading={loading} onClick={updateAttendance} color=\"teal\">\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport { Activity } from '../../../app/Models/Activity';\r\nimport {format} from 'date-fns'\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/Models/Activity'\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\n\r\nexport default observer(function ActivityDetailedSidebar ({activity :{attendees,host}}: Props) {\r\n    if(!attendees){\r\n        return null;\r\n    }\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee => (\r\n                        <Item style={{ position: 'relative' }} key = {attendee.username}>\r\n                            {attendee.username === host?.username &&\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>}\r\n                        <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                            </Item.Header>\r\n                            {attendee.following &&\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n                        </Item.Content>\r\n                    </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nconst AcivityDetails = () => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity,clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId = {activity.id}/>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(AcivityDetails);\r\n","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n    const[errors,setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n            <ValidationErrors errors={errors}/>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nconst NotFound = () =>{\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}\r\n\r\n\r\nexport default NotFound;","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\n\r\nconst ModalContainer = () => {\r\n    const{modalStore} = useStore();\r\n    return(\r\n        <Modal open={modalStore.modal.open} onClose = {modalStore.closeModal} size='mini'>\r\n            <Modal.Content>\r\n                {modalStore.modal.body}\r\n            </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default observer(ModalContainer);","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrenUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrenUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { UserActivity } from \"../../app/Models/profile\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities,\r\n  } = profileStore;\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfileFollowings = () => {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    profile,\r\n    followings,\r\n    loadingFollowings,\r\n    activeTab\r\n  } = profileStore;\r\n\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following` }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileFollowings);\r\n","import React from 'react'\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface Props {\r\n    imagePreview:string;\r\n    setCropper:( cropper:Cropper) => void;\r\n}\r\n\r\n\r\nconst PhotoWidgetCropper =({imagePreview,setCropper}:Props) =>{\r\n    return(\r\n        <Cropper\r\n            src={imagePreview}\r\n            style={{height:200, width:'100%'}}\r\n            initialAspectRatio={1}\r\n            aspectRatio={1}\r\n            preview='.img-preview'\r\n            guides={false}\r\n            viewMode={1}\r\n            autoCropArea={1}\r\n            background={false}\r\n            onInitialized ={cropper => setCropper(cropper)}\r\n\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default PhotoWidgetCropper;","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n    setFiles:(files : any) => void;\r\n}\r\n\r\n\r\nexport default  function PhotoWidgetDropzone({setFiles} : Props) {\r\n  const dzStyles = {\r\n      border: 'dashed 3px #eee',\r\n      borderColor: '#eee',\r\n      borderRadius: '5px',\r\n      paddingTop:'30px',\r\n      textAlign: 'center' as 'center',\r\n      height: 200\r\n\r\n  }\r\n\r\n  const dzActive ={\r\n      borderColor:'green'\r\n  }\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map((file:any) => Object.assign(file,{\r\n        preview:URL.createObjectURL(file)\r\n    })))\r\n  }, [setFiles])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ?{...dzStyles,...dzActive}: dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge'/>\r\n      <Header content='Drop image here'/>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Button, Grid, Header} from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n    loading:boolean;\r\n    uploadPhoto:(file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWifget =({loading,uploadPhoto}: Props) =>{\r\n    const [files,setFiles] =  useState<any>([]);\r\n    const [cropper,setCropper] = useState<Cropper>();\r\n\r\n    function onCrop() {\r\n        if(cropper){\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!))\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return() => {\r\n            files.forEach((file:any)=> URL.revokeObjectURL(file.preview))\r\n        }\r\n    },[files])\r\n\r\n    return(\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 2 - Resize image'/>\r\n                {files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\r\n                )}\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' content='Step 3 - Preview & Upload'/>\r\n                {files && files.length > 0 &&\r\n                <>\r\n                <div className=\"img-preview\" style={{ minHeight:200,overflow:'hidden'}}></div>\r\n                \r\n                <Button.Group widths={2}>\r\n                    <Button loading={loading} onClick={onCrop} positive icon='check'/>\r\n                    <Button disabled ={loading} onClick={()=>setFiles([])} icon='close'/>\r\n                </Button.Group>\r\n                </>}       \r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PhotoUploadWifget;","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\r\nimport PhotoUploadWifget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/Models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfilePhotos = ({ profile }: Props) => {\r\n  const {\r\n    profileStore: {\r\n      isCurrenUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletPhoto,\r\n    },\r\n  } = useStore();\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  const handlePhotoUpdate = (file: Blob) => {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  };\r\n\r\n  const handleSetmainPhoto = (\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) => {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  };\r\n  const handleDeletePhoto = (\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) => {\r\n    setTarget(e.currentTarget.name);\r\n    deletPhoto(photo);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrenUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWifget\r\n              uploadPhoto={handlePhotoUpdate}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrenUser && (\r\n                    <Button.Group fluid width={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetmainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name = {photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/Models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n    profile: Profile;\r\n  }\r\n\r\nconst ProfileContent =({profile}: Props) => {\r\n    const {profileStore} = useStore();\r\n    const panes = [\r\n        {menuItem:'About', render:()=> <ProfileAbout/>},\r\n        {menuItem:'Photos', render:()=> <ProfilePhotos profile={profile}/>},\r\n        {menuItem:'Events', render:()=> <ProfileActivities />},\r\n        {menuItem:'Followers', render:()=> <ProfileFollowings/>},\r\n        {menuItem:'Following', render:()=> <ProfileFollowings/>},\r\n    ];\r\n\r\n    return(\r\n        <Tab \r\n            menu ={{fluid:true, vertical: true}}\r\n            menuPosition='right'\r\n            panes={panes}\r\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default observer( ProfileContent);","import { observer } from \"mobx-react-lite\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/Models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfilrHeader = ({profile}: Props) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar size=\"small\" src={profile.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName}/>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\nexport default observer( ProfilrHeader);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfilrHeader from \"./ProfileHeader\";\r\n\r\nconst ProfilePage = () => {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile,setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return() => {\r\n      setActiveTab(0);\r\n    }\r\n  }, [setActiveTab,loadProfile, username]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading Profile ...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfilrHeader profile={profile} />{\" \"}\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps} from 'react-router';\r\nimport { useStore } from '../stores/store'\r\n\r\ninterface Props extends RouteProps{\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}: Props) => {\r\n    const {userStore: {isLoggedIn}} = useStore();\r\n    return(\r\n        <Route \r\n            {...rest}\r\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/Dashboard/ActivitiDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport HomePage from \"../../features/home/HomePage\";\nimport activityForm from \"../../features/activities/form/activityForm\";\nimport AcivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if(commonStore.token){\n      userStore.getUser().finally(()=>commonStore.setAppLoaded());\n    }else{\n      commonStore.setAppLoaded();\n    }\n  },[commonStore,userStore])\n\n  if (!commonStore.appLoaded) {\n    return <LoadingComponent content ='Loading app...'/>\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute path=\"/activities/:id\" component={AcivityDetails} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={activityForm}\n                />\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./app/layout/Styles.css\";\nimport reportWebVitals from \"./reportWebVitals\"; \nimport \"react-toastify/dist/ReactToastify.min.css\"\nimport 'react-calendar/dist/Calendar.css'\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-datepicker/dist/react-datepicker.css'\nimport App from \"./app/layout/App\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport {Router} from \"react-router-dom\"\nimport {createBrowserHistory} from \"history\"\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history = {history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}